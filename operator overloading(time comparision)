
//COMPARE TWO TIME 
//CONSEPT :- 1)OPERATOR OVERLOADING 2)FRIEND FUNCTION

#include <iostream>
using namespace std;

class time
{
        int hour, min, sec;
         int x, y;
public:
        time() : hour(0), min(0), sec(0) {}
        friend int calc(time &t1,time &t2);
        void getdata()
        {
                cout << "Enter hours : ";
                cin >> hour;
                cout << "Enter minutes ";
                cin >> min;
                cout << "Enter second : ";
                cin >> sec;
        }
        void putdata()
        {
                cout << "Time : " << hour << ":" << min << ":" << sec << endl;
        }

        void operator==(time &t)
        {
               cout << "Time 1 : " <<  hour << ":" << min << ":" << sec << endl;
                cout << "Time 2 :"<<  t.hour << ":" << t.min << ":" << t.sec << endl;
                cout << "Both Time are Equval "  << endl;
        }

        void operator > (time &t){
                cout << "Time 1 : " <<  hour << ":" << min << ":" << sec << endl;
                cout << "Time 2 :"<<  t.hour << ":" << t.min << ":" << t.sec << endl;
                cout << "Time 1 is graterthan Time 2"  << endl;
        }

        void operator < (time &t){
                cout << "Time 1 : " <<  hour << ":" << min << ":" << sec << endl;
                cout << "Time 2 :"<<  t.hour << ":" << t.min << ":" << t.sec << endl;
                cout << "Time 1 is lessthan Time 2"  << endl;
        }


        
};

int calc(time & t1,time & t2){
        int x;
        int y;
        x = (t1.hour * 60) + (t1.min * 60) + t1.sec;
        y = ((t2.hour * 60) + (t2.min * 60) + t2.sec);
        if(x<y)
        return 1;
        else if(x==y)
        return 2;
        else
        return 3;
}

int main()
{
        time t4;
        time t5;
        int z;
        t4.getdata();
        t5.getdata();
        z=calc(t4,t5);
        switch(z){
                case 1:
                t4 < t5;
                break;
                case 2:
                t4 == t5;
                break;
                case 3:
                t4 > t5;
                break;
        }
        return 0;
}
